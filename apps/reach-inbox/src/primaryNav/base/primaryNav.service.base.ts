/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, PrimaryNav as PrismaPrimaryNav } from "@prisma/client";

export class PrimaryNavServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.PrimaryNavCountArgs, "select">
  ): Promise<number> {
    return this.prisma.primaryNav.count(args);
  }

  async primaryNavs(
    args: Prisma.PrimaryNavFindManyArgs
  ): Promise<PrismaPrimaryNav[]> {
    return this.prisma.primaryNav.findMany(args);
  }
  async primaryNav(
    args: Prisma.PrimaryNavFindUniqueArgs
  ): Promise<PrismaPrimaryNav | null> {
    return this.prisma.primaryNav.findUnique(args);
  }
  async createPrimaryNav(
    args: Prisma.PrimaryNavCreateArgs
  ): Promise<PrismaPrimaryNav> {
    return this.prisma.primaryNav.create(args);
  }
  async updatePrimaryNav(
    args: Prisma.PrimaryNavUpdateArgs
  ): Promise<PrismaPrimaryNav> {
    return this.prisma.primaryNav.update(args);
  }
  async deletePrimaryNav(
    args: Prisma.PrimaryNavDeleteArgs
  ): Promise<PrismaPrimaryNav> {
    return this.prisma.primaryNav.delete(args);
  }
}
